version: "3.9"

services:
  # =============================================================================
  # FRONTEND & API GATEWAY
  # =============================================================================
  
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://api-gateway:8000
    depends_on:
      - api-gateway
    networks:
      - scorpius-network
    restart: unless-stopped

  api-gateway:
    build: ./api-gateway
    ports:
      - "8080:8000"
    environment:
      - DATABASE_URL=postgresql://scorpius:scorpius123@postgres:5432/scorpius_db
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=INFO
      - SCANNER_AI_URL=http://scanner-ai-orchestrator:8000
      - TIME_MACHINE_URL=http://time-machine-service:8000
      - REPORTING_URL=http://reporting-service:8000
    depends_on:
      - postgres
      - redis
      - scanner-ai-orchestrator
      - time-machine-service
      - reporting-service
    networks:
      - scorpius-network
    restart: unless-stopped

  # =============================================================================
  # SCANNER SERVICES
  # =============================================================================

  scanner-ai-orchestrator:
    build: ./scanner-ai-orchestrator
    ports:
      - "8010:8000"
    environment:
      - REDIS_URL=redis://redis:6379/1
      - DATABASE_URL=postgresql://scorpius:scorpius123@postgres:5432/scorpius_db
      - MYTHRIL_URL=http://scanner-mythril:8000
      - SLITHER_URL=http://scanner-slither:8000
      - MANTICORE_URL=http://scanner-manticore:8000
      - MYTHX_URL=http://scanner-mythx:8000
      - LOG_LEVEL=INFO
    depends_on:
      - postgres
      - redis
      - scanner-mythril
      - scanner-slither
      - scanner-manticore
      - scanner-mythx
    networks:
      - scorpius-network
    restart: unless-stopped

  scanner-mythril:
    build: ./scanner-mythril
    ports:
      - "8011:8000"
    environment:
      - REDIS_URL=redis://redis:6379/2
      - LOG_LEVEL=INFO
    depends_on:
      - redis
    networks:
      - scorpius-network
    restart: unless-stopped

  scanner-slither:
    build: ./scanner-slither
    ports:
      - "8012:8000"
    environment:
      - REDIS_URL=redis://redis:6379/3
      - LOG_LEVEL=INFO
    depends_on:
      - redis
    networks:
      - scorpius-network
    restart: unless-stopped

  scanner-manticore:
    build: ./scanner-manticore
    ports:
      - "8013:8000"
    environment:
      - REDIS_URL=redis://redis:6379/4
      - LOG_LEVEL=INFO
    depends_on:
      - redis
    networks:
      - scorpius-network
    restart: unless-stopped

  scanner-mythx:
    build: ./scanner-mythx
    ports:
      - "8014:8000"
    environment:
      - REDIS_URL=redis://redis:6379/5
      - MYTHX_API_KEY=${MYTHX_API_KEY}
      - LOG_LEVEL=INFO
    depends_on:
      - redis
    networks:
      - scorpius-network
    restart: unless-stopped

  # =============================================================================
  # CORE SERVICES
  # =============================================================================

  time-machine-service:
    build: ./time-machine-service
    ports:
      - "8020:8000"
    environment:
      - REDIS_URL=redis://redis:6379/6
      - POSTGRES_URL=postgresql://scorpius:scorpius123@postgres:5432/scorpius_db
      - LOG_LEVEL=INFO
    depends_on:
      - postgres
      - redis
    networks:
      - scorpius-network
    restart: unless-stopped
    volumes:
      - time_machine_data:/app/store

  reporting-service:
    build: ./reporting-service
    ports:
      - "8021:8000"
    environment:
      - DATABASE_URL=postgresql://scorpius:scorpius123@postgres:5432/scorpius_db
      - REDIS_URL=redis://redis:6379/7
      - LOG_LEVEL=INFO
    depends_on:
      - postgres
      - redis
    networks:
      - scorpius-network
    restart: unless-stopped
    volumes:
      - reporting_data:/app/reports

  settings-service:
    build: ./settings-service
    ports:
      - "8022:8000"
    environment:
      - DATABASE_URL=postgresql://scorpius:scorpius123@postgres:5432/scorpius_db
      - REDIS_URL=redis://redis:6379/8
      - LOG_LEVEL=INFO
    depends_on:
      - postgres
      - redis
    networks:
      - scorpius-network
    restart: unless-stopped

  # =============================================================================
  # BLOCKCHAIN SERVICES
  # =============================================================================

  mempool-service:
    build: ./mempool-service
    ports:
      - "8030:8000"
    environment:
      - REDIS_URL=redis://redis:6379/9
      - WEB3_PROVIDER_URL=${WEB3_PROVIDER_URL:-wss://mainnet.infura.io/ws/v3/YOUR_KEY}
      - LOG_LEVEL=INFO
    depends_on:
      - redis
    networks:
      - scorpius-network
    restart: unless-stopped

  bytecode-service:
    build: ./bytecode-service
    ports:
      - "8031:8000"
    environment:
      - REDIS_URL=redis://redis:6379/10
      - DATABASE_URL=postgresql://scorpius:scorpius123@postgres:5432/scorpius_db
      - LOG_LEVEL=INFO
    depends_on:
      - postgres
      - redis
    networks:
      - scorpius-network
    restart: unless-stopped

  bridge-service:
    build: ./bridge-service
    ports:
      - "8032:8000"
    environment:
      - REDIS_URL=redis://redis:6379/11
      - DATABASE_URL=postgresql://scorpius:scorpius123@postgres:5432/scorpius_db
      - LOG_LEVEL=INFO
    depends_on:
      - postgres
      - redis
    networks:
      - scorpius-network
    restart: unless-stopped

  # =============================================================================
  # MEV & SECURITY SERVICES
  # =============================================================================

  mev-bot-service:
    build: ./mev-bot-service
    ports:
      - "8040:8000"
    environment:
      - REDIS_URL=redis://redis:6379/12
      - WEB3_PROVIDER_URL=${WEB3_PROVIDER_URL:-wss://mainnet.infura.io/ws/v3/YOUR_KEY}
      - MEMPOOL_URL=http://mempool-service:8000
      - LOG_LEVEL=INFO
    depends_on:
      - redis
      - mempool-service
    networks:
      - scorpius-network
    restart: unless-stopped

  mev-protection-service:
    build: ./mev-protection-service
    ports:
      - "8041:8000"
    environment:
      - REDIS_URL=redis://redis:6379/13
      - DATABASE_URL=postgresql://scorpius:scorpius123@postgres:5432/scorpius_db
      - LOG_LEVEL=INFO
    depends_on:
      - postgres
      - redis
    networks:
      - scorpius-network
    restart: unless-stopped

  honeypot-service:
    build: ./honeypot-service
    ports:
      - "8042:8000"
    environment:
      - REDIS_URL=redis://redis:6379/14
      - DATABASE_URL=postgresql://scorpius:scorpius123@postgres:5432/scorpius_db
      - LOG_LEVEL=INFO
    depends_on:
      - postgres
      - redis
    networks:
      - scorpius-network
    restart: unless-stopped

  wallet-guard-service:
    build: ./wallet-guard-service
    ports:
      - "8043:8000"
    environment:
      - REDIS_URL=redis://redis:6379/15
      - DATABASE_URL=postgresql://scorpius:scorpius123@postgres:5432/scorpius_db
      - LOG_LEVEL=INFO
    depends_on:
      - postgres
      - redis
    networks:
      - scorpius-network
    restart: unless-stopped

  # =============================================================================
  # QUANTUM & ADVANCED SERVICES
  # =============================================================================

  quantum-service:
    build: ./quantum-service
    ports:
      - "8050:8000"
    environment:
      - REDIS_URL=redis://redis:6379/16
      - LOG_LEVEL=INFO
    depends_on:
      - redis
    networks:
      - scorpius-network
    restart: unless-stopped

  quantum-crypto-service:
    build: ./quantum-crypto-service
    ports:
      - "8051:8000"
    environment:
      - REDIS_URL=redis://redis:6379/17
      - DATABASE_URL=postgresql://scorpius:scorpius123@postgres:5432/scorpius_db
      - LOG_LEVEL=INFO
    depends_on:
      - postgres
      - redis
    networks:
      - scorpius-network
    restart: unless-stopped

  simulation-service:
    build: ./simulation-service
    ports:
      - "8052:8000"
    environment:
      - REDIS_URL=redis://redis:6379/18
      - DATABASE_URL=postgresql://scorpius:scorpius123@postgres:5432/scorpius_db
      - LOG_LEVEL=INFO
    depends_on:
      - postgres
      - redis
    networks:
      - scorpius-network
    restart: unless-stopped

  ai-forensics-service:
    build: ./ai-forensics-service
    ports:
      - "8053:8000"
    environment:
      - REDIS_URL=redis://redis:6379/19
      - DATABASE_URL=postgresql://scorpius:scorpius123@postgres:5432/scorpius_db
      - LOG_LEVEL=INFO
    depends_on:
      - postgres
      - redis
    networks:
      - scorpius-network
    restart: unless-stopped

  exploit-testing-service:
    build: ./exploit-testing-service
    ports:
      - "8054:8000"
    environment:
      - REDIS_URL=redis://redis:6379/20
      - DATABASE_URL=postgresql://scorpius:scorpius123@postgres:5432/scorpius_db
      - LOG_LEVEL=INFO
    depends_on:
      - postgres
      - redis
    networks:
      - scorpius-network
    restart: unless-stopped

  integration-hub:
    build: ./integration-hub
    ports:
      - "8055:8000"
    environment:
      - REDIS_URL=redis://redis:6379/21
      - DATABASE_URL=postgresql://scorpius:scorpius123@postgres:5432/scorpius_db
      - LOG_LEVEL=INFO
    depends_on:
      - postgres
      - redis
    networks:
      - scorpius-network
    restart: unless-stopped

  # =============================================================================
  # INFRASTRUCTURE
  # =============================================================================

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=scorpius_db
      - POSTGRES_USER=scorpius
      - POSTGRES_PASSWORD=scorpius123
    ports:
      - "5432:5432"
    networks:
      - scorpius-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U scorpius"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - scorpius-network
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =============================================================================
  # MONITORING & MANAGEMENT
  # =============================================================================

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@scorpius.local
      - PGADMIN_DEFAULT_PASSWORD=admin123
    ports:
      - "8083:80"
    depends_on:
      - postgres
    networks:
      - scorpius-network
    restart: unless-stopped

  redis-commander:
    image: ghcr.io/joeferner/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8084:8081"
    depends_on:
      - redis
    networks:
      - scorpius-network
    restart: unless-stopped

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - scorpius-network
    restart: unless-stopped

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - scorpius-network
    restart: unless-stopped

networks:
  scorpius-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres_data:
  redis_data:
  time_machine_data:
  reporting_data:
  prometheus_data:
  grafana_data:
