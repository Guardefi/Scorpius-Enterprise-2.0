# Ultimate Scanner System - Nginx Configuration
# Reverse proxy and load balancer for all scanner services

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        text/css
        text/javascript
        text/xml
        text/plain;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=scanner_api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=dashboard:10m rate=5r/s;

    # Upstream definitions for load balancing
    upstream scanner_orchestrator {
        server scanner-orchestrator:8000 max_fails=3 fail_timeout=30s;
    }

    upstream quantum_scanner {
        server quantum-scanner:8000 max_fails=3 fail_timeout=30s;
    }

    upstream slither_scanner {
        server slither-scanner:8001 max_fails=3 fail_timeout=30s;
    }

    upstream mythril_scanner {
        server mythril-scanner:8002 max_fails=3 fail_timeout=30s;
    }

    upstream manticore_scanner {
        server manticore-scanner:8003 max_fails=3 fail_timeout=30s;
    }

    upstream scanner_dashboard {
        server scanner-dashboard:3000 max_fails=3 fail_timeout=30s;
    }

    upstream scanner_grafana {
        server scanner-grafana:3000 max_fails=3 fail_timeout=30s;
    }

    # Main server block
    server {
        listen 80;
        server_name localhost;
        client_max_body_size 100M;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Root - Scanner Dashboard
        location / {
            limit_req zone=dashboard burst=10 nodelay;
            proxy_pass http://scanner_dashboard;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Scanner Orchestrator API
        location /api/orchestrator/ {
            limit_req zone=scanner_api burst=20 nodelay;
            rewrite ^/api/orchestrator/(.*) /$1 break;
            proxy_pass http://scanner_orchestrator;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 300s;
            proxy_connect_timeout 30s;
        }

        # Quantum Scanner API
        location /api/quantum/ {
            limit_req zone=scanner_api burst=15 nodelay;
            rewrite ^/api/quantum/(.*) /$1 break;
            proxy_pass http://quantum_scanner;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 300s;
        }

        # Slither Scanner API
        location /api/slither/ {
            limit_req zone=scanner_api burst=10 nodelay;
            rewrite ^/api/slither/(.*) /$1 break;
            proxy_pass http://slither_scanner;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 600s;
        }

        # Mythril Scanner API
        location /api/mythril/ {
            limit_req zone=scanner_api burst=10 nodelay;
            rewrite ^/api/mythril/(.*) /$1 break;
            proxy_pass http://mythril_scanner;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 900s;
        }

        # Manticore Scanner API
        location /api/manticore/ {
            limit_req zone=scanner_api burst=5 nodelay;
            rewrite ^/api/manticore/(.*) /$1 break;
            proxy_pass http://manticore_scanner;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 1200s;
        }

        # WebSocket connections for real-time updates
        location /ws/ {
            proxy_pass http://scanner_orchestrator;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
        }

        # Grafana monitoring dashboard
        location /grafana/ {
            limit_req zone=dashboard burst=5 nodelay;
            rewrite ^/grafana/(.*) /$1 break;
            proxy_pass http://scanner_grafana;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Grafana WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Health checks endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Metrics endpoint for Prometheus
        location /metrics {
            proxy_pass http://scanner_orchestrator/metrics;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            allow 172.21.0.0/16;  # Allow only internal network
            deny all;
        }

        # Static assets with caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
        }

        # Security - deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # API documentation
        location /docs {
            proxy_pass http://scanner_orchestrator/docs;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # OpenAPI JSON schema
        location /openapi.json {
            proxy_pass http://scanner_orchestrator/openapi.json;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # SSL/HTTPS server block (commented out until certificates are available)
    # server {
    #     listen 443 ssl http2;
    #     server_name localhost;
    #     
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers HIGH:!aNULL:!MD5;
    #     ssl_prefer_server_ciphers on;
    #     
    #     # Redirect HTTP to HTTPS
    #     error_page 497 https://$server_name$request_uri;
    #     
    #     # Same location blocks as HTTP server...
    # }
}
