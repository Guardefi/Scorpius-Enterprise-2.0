#!/bin/bash
# Deployment script for Quantum Scanner + Scorpius Integration

set -e

echo "üöÄ Starting Quantum Scanner + Scorpius Integration Deployment..."

# Create required directories
echo "üìÅ Creating required directories..."
mkdir -p logs models data nginx/ssl monitoring/grafana/provisioning

# Check if Docker is running
if ! docker info > /dev/null 2>&1; then
    echo "‚ùå Docker is not running. Please start Docker and try again."
    exit 1
fi

# Check if Docker Compose is available
if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose not found. Please install Docker Compose."
    exit 1
fi

# Pull latest images
echo "üì¶ Pulling latest Docker images..."
docker-compose pull

# Build services
echo "üî® Building services..."
docker-compose build --no-cache

# Start services
echo "üéØ Starting services..."
docker-compose up -d

# Wait for services to be ready
echo "‚è≥ Waiting for services to start..."
sleep 30

# Health checks
echo "üè• Performing health checks..."

# Check Quantum Scanner
if curl -f http://localhost/quantum/health > /dev/null 2>&1; then
    echo "‚úÖ Quantum Scanner is healthy"
else
    echo "‚ùå Quantum Scanner health check failed"
fi

# Check Redis
if docker-compose exec -T redis redis-cli ping | grep -q PONG; then
    echo "‚úÖ Redis is healthy"
else
    echo "‚ùå Redis health check failed"
fi

# Check PostgreSQL
if docker-compose exec -T postgres pg_isready -U quantum -d quantum_scanner > /dev/null 2>&1; then
    echo "‚úÖ PostgreSQL is healthy"
else
    echo "‚ùå PostgreSQL health check failed"
fi

# Show service status
echo "üìä Service Status:"
docker-compose ps

echo ""
echo "üéâ Deployment completed!"
echo ""
echo "Available endpoints:"
echo "  ‚Ä¢ Quantum Scanner API: http://localhost/quantum/"
echo "  ‚Ä¢ Scorpius Orchestrator: http://localhost/scorpius/"
echo "  ‚Ä¢ AI Threat Predictor: http://localhost/quantum/ai-threat-predictor/"
echo "  ‚Ä¢ Prometheus Metrics: http://localhost:9090"
echo "  ‚Ä¢ Grafana Dashboard: http://localhost:3000 (admin/admin123)"
echo ""
echo "To view logs: docker-compose logs -f [service-name]"
echo "To stop services: docker-compose down"
